- name: Install bind9
  apt:
    name: bind9
    state: present


- block:
    - name: Copy file named.conf.options
      template:
        src: named.conf.options.j2
        dest: /etc/bind/named.conf.options
      no_log: true
    - name: Copy file named.conf.local
      template:
        src: named.conf.local.j2
        dest: /etc/bind/named.conf.local
  notify: 
    - Restart bind9

- block:
    - name: Create a directory if it does not exists /var/cache/bind
      file:
        path: /var/cache/bind
        state: 'directory'
    - stat: path=/var/cache/bind/db.{{ startup_name }}
      register: db_uploaded
    - stat: path=/var/cache/bind/db.rev
      register: db_rev_uploaded  
    - name: Copy file db.{{ startup_name }}
      template:
        src: db.{{ startup_name }}.j2
        dest: /var/cache/bind/db.{{ startup_name }}
        owner: bind
        group: bind
      when: not db_uploaded.stat.exists
    - name: Copy file db.rev
      template:
        src: db.rev.j2
        dest: /var/cache/bind/db.rev
        owner: bind
        group: bind
      when: not db_rev_uploaded.stat.exists
  notify: 
    - RNDC reload

- name: Install prometheus-bind-exporter
  apt:
    name: 
      - prometheus-bind-exporter
    state: present

- name: systemd-resolved service is stopped
  service:
    name: systemd-resolved
    state: stopped
    enabled: false
- name: Copy file resolv.conf.j2
  template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf

- name: Install python3-dnspython
  apt:
    name: 
      - python3-dnspython
    state: present

- service:
    enabled: true
    name: "{{ item }}"
    state: started
  loop:
    - bind9
    - prometheus-bind-exporter


- name: Flush handlers
  meta: flush_handlers

- name: Add or modify backup A"
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_algorithm: "hmac-sha256"
    key_secret: "{{ dns_update_key }}"
    server: "{{ groups['dns_primary'][0] }}"
    zone: "{{ startup_name }}"
    record: "backup"
    value: "{{ backup_server_ip }}"
  when: inventory_hostname in groups['dns_primary']


- include_role:
    name: dns_record
  vars:
    dns_record: "ns{{ inventory_hostname.replace(machine_name, '') }}"
